buildscript {
    repositories {
        google()
        jcenter()
	maven { url 'https://mvnrepository.com/artifact/' } // for play-publisher
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
    }
}

plugins {
    id "com.github.triplet.play" version "2.2.0"
}

def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'http://4thline.org/m2' } // for cling
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

static def getDate() {
    // we increment version number every 1000 seconds,
    // we start on 31/08/2016
    def date = new Date().getTime() / 1000L - 1472637600L
    return (int) (date / 1000L)
}

static def getFormattedDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd.HHmm')
    return formattedDate
}

apply {
    plugin("com.android.application")
    plugin("com.github.triplet.play")
}

play {
    serviceAccountCredentials = file("nova.json")
    //jsonFile = file('nova.json')
    track = 'internal' // rollout, beta, alpha, release, internal
    userFraction = 1.0 // rollout rate in %/100
    releaseStatus = "completed"
}

android {
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
		storeFile file(keystoreProperties['storeFile'])
		storePassword keystoreProperties['storePassword']
		keyAlias keystoreProperties['keyAlias']
		keyPassword keystoreProperties['keyPassword']
            }
	}
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
    defaultConfig {
        generatedDensities = []
        minSdkVersion 21
        targetSdkVersion 28
        multiDexEnabled true
        versionCode getDate()
        versionName '1.0-' + getFormattedDate()
        if (keystorePropertiesFile.exists()) signingConfig signingConfigs.release
        applicationId "org.courville.nova"
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    flavorDimensions "version", "tv", "amazon"
    productFlavors {
        community {
            dimension "version"
        }
        amazon {
            dimension "amazon"
        }
        noamazon {
            dimension "amazon"
        }
        leanback {
            minSdkVersion 21
            dimension "tv"
            versionCode 2
        }
        noleanback {
            dimension "tv"
            versionCode 1
        }
    }
    // make per-variant version code
    applicationVariants.all { variant ->
        // get the version code of each flavor
        def compatVersion = variant.productFlavors.get(1).versionCode
        // set the composite code
        variant.outputs.all { output ->
            output.setVersionCodeOverride(compatVersion * 1000000 + defaultConfig.versionCode)
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/beans.xml'
        exclude 'META-INF/maven'
        exclude 'README'
        pickFirst 'lib/x86/libnativehelper.so'
        pickFirst 'lib/x86_64/libnativehelper.so'
        pickFirst 'lib/armeabi-v7a/libnativehelper.so'
        pickFirst 'lib/arm64-v8a/libnativehelper.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }
    if (project.ext.has("ProjectKeyStoreFile")) {
        signingConfigs {
            release {
                storeFile file(ProjectKeyStoreFile)
                storePassword ProjectKeyStorePassword
                keyAlias ProjectKeyAlias
                keyPassword ProjectKeyPassword
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
            debug {
                signingConfig signingConfigs.release
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def api = variant.mergedFlavor.minSdkVersion.apiLevel
            outputFileName = outputFileName.replace("-noleanback-", "-API_" + "${api}" + "+-")
                    .replace("-community-", "-")
                    .replace("-leanback-", "-API_" + "${api}" + "+-")
                    .replace("-noamazon-", "-")
            assemble.doLast {
                println outputFileName
            }
        }
    }
}

if (file("../VideoInternal").exists()) {
    apply from: "../VideoInternal/mc_apps_common_env.gradle"
    apply from: '../VideoInternal/internal_build.gradle'
}

dependencies {
    implementation project(':FileCoreLibrary')
    implementation project(':MediaLib')
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.tvprovider:tvprovider:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.media:media:1.0.1'
    implementation 'androidx.core:core:1.0.1'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'com.github.ksoichiro:android-observablescrollview:1.6.0'
    implementation 'com.google.android.material:material:1.0.0'
    leanbackImplementation 'androidx.leanback:leanback:1.0.0'
    leanbackImplementation 'androidx.leanback:leanback-preference:1.1.0-alpha01'
    implementation 'androidx.tvprovider:tvprovider:1.0.0'
}
